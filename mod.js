// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,i=o.__defineSetter__,l=o.__lookupGetter__,u=o.__lookupSetter__;r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,s,_,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((s="value"in t)&&(l.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),_="get"in t,p="set"in t,s&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(e,r,t.get),p&&i&&i.call(e,r,t.set),e};var c=/(\d+)([a-z]+)/gi,s={d:"days",h:"hours",m:"minutes",s:"seconds",ms:"milliseconds"};function _(e){var r,t,o;if(t={days:0,hours:0,minutes:0,seconds:0,milliseconds:0},0===e.length)return t;for(e=function(e){return e.toLowerCase()}(e),r=c.exec(e);r;)(o=s[r[2]])&&(t[o]=parseInt(r[1],10)),r=c.exec(e);return t}var p={};r(p,"parseDuration",{configurable:!1,enumerable:!0,writable:!1,value:_});export{p as default,_ as parseDuration};
//# sourceMappingURL=mod.js.map
